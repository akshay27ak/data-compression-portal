/**
 * Encode data
 * @param {array} arr
 */
function encode(data) {
    let encoding = [];
    let previous = data[0];
    let count = 1;
    for (let i = 1; i < data.length; i++) {
        if (data[i] !== previous) {
            encoding.push(count, previous);
            count = 1;
            previous = data[i];
        }
        else {
            count++;
        }
    }
    /**
     * Add a last pair
     */
    encoding.push(count, previous);
    return encoding;
}
/**
 * Decode data
 * @param {array} encoded
 */
function decode(data) {
    let uncompressed = [];
    /**
     * Create a new array with decoded data
     */
    data.map((element, ind) => {
        if (ind % 2 === 0) {
            /**
             * Polyfill
             * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill
             */
            if (!Array.prototype.fill) {
                function fillPolyfill(value, len) {
                    for (let i = 0; i < len; i++) {
                        uncompressed.push(value);
                    }
                }
                ;
                fillPolyfill(data[ind + 1], element);
            }
            else {
                /**
                 * ES6 solution but Internet Explorer doesn't support
                 */
                uncompressed.push(...Array(element).fill(data[ind + 1]));
            }
        }
    });
    return uncompressed;
}
module.exports = {
    encode: encode,
    decode: decode
};
